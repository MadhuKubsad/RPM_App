/*
 * RPM Mobile
 * RPM Mobile
 *
 * The version of the OpenAPI document: Phase 1
 * Contact: karthikchiru@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.AccessType;
import org.openapitools.client.model.AudioFeedback;
import org.openapitools.client.model.ChangeTracker;
import org.openapitools.client.model.City;
import org.openapitools.client.model.Country;
import org.openapitools.client.model.DatabaseFacade;
import org.openapitools.client.model.DbContextId;
import org.openapitools.client.model.Gear;
import org.openapitools.client.model.GearBrand;
import org.openapitools.client.model.GroupAdminDetails;
import org.openapitools.client.model.GroupAdminUserDetails;
import org.openapitools.client.model.Language;
import org.openapitools.client.model.MeasureDistance;
import org.openapitools.client.model.MeasureHeight;
import org.openapitools.client.model.MeasureWeight;
import org.openapitools.client.model.PasswordResetToken;
import org.openapitools.client.model.ProvinceState;
import org.openapitools.client.model.QueryComment;
import org.openapitools.client.model.QueryMaster;
import org.openapitools.client.model.RefreshToken;
import org.openapitools.client.model.Role;
import org.openapitools.client.model.RoleAccess;
import org.openapitools.client.model.SongsDetails;
import org.openapitools.client.model.Themes;
import org.openapitools.client.model.User;
import org.openapitools.client.model.UserGear;
import org.openapitools.client.model.UserQueryDetails;
import org.openapitools.client.model.UserRole;
import org.openapitools.client.model.VideoDetails;
import java.io.Serializable;

/**
 * RPMContext
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T19:18:22.480284200+05:30[Asia/Calcutta]")
public class RPMContext implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_DATABASE = "database";
  @SerializedName(SERIALIZED_NAME_DATABASE)
  private DatabaseFacade database;

  public static final String SERIALIZED_NAME_CHANGE_TRACKER = "changeTracker";
  @SerializedName(SERIALIZED_NAME_CHANGE_TRACKER)
  private ChangeTracker changeTracker;

  public static final String SERIALIZED_NAME_MODEL = "model";
  @SerializedName(SERIALIZED_NAME_MODEL)
  private Object model;

  public static final String SERIALIZED_NAME_CONTEXT_ID = "contextId";
  @SerializedName(SERIALIZED_NAME_CONTEXT_ID)
  private DbContextId contextId;

  public static final String SERIALIZED_NAME_USER = "user";
  @SerializedName(SERIALIZED_NAME_USER)
  private List<User> user = null;

  public static final String SERIALIZED_NAME_ROLE = "role";
  @SerializedName(SERIALIZED_NAME_ROLE)
  private List<Role> role = null;

  public static final String SERIALIZED_NAME_USER_ROLE = "userRole";
  @SerializedName(SERIALIZED_NAME_USER_ROLE)
  private List<UserRole> userRole = null;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private List<Country> country = null;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private List<City> city = null;

  public static final String SERIALIZED_NAME_PROVINCE_STATE = "provinceState";
  @SerializedName(SERIALIZED_NAME_PROVINCE_STATE)
  private List<ProvinceState> provinceState = null;

  public static final String SERIALIZED_NAME_PASSWORD_RESET_TOKEN = "passwordResetToken";
  @SerializedName(SERIALIZED_NAME_PASSWORD_RESET_TOKEN)
  private List<PasswordResetToken> passwordResetToken = null;

  public static final String SERIALIZED_NAME_THEMES = "themes";
  @SerializedName(SERIALIZED_NAME_THEMES)
  private List<Themes> themes = null;

  public static final String SERIALIZED_NAME_REFRESH_TOKEN = "refreshToken";
  @SerializedName(SERIALIZED_NAME_REFRESH_TOKEN)
  private List<RefreshToken> refreshToken = null;

  public static final String SERIALIZED_NAME_GEAR = "gear";
  @SerializedName(SERIALIZED_NAME_GEAR)
  private List<Gear> gear = null;

  public static final String SERIALIZED_NAME_GEAR_BRAND = "gearBrand";
  @SerializedName(SERIALIZED_NAME_GEAR_BRAND)
  private List<GearBrand> gearBrand = null;

  public static final String SERIALIZED_NAME_MEASURE_DISTANCE = "measureDistance";
  @SerializedName(SERIALIZED_NAME_MEASURE_DISTANCE)
  private List<MeasureDistance> measureDistance = null;

  public static final String SERIALIZED_NAME_MEASURE_WEIGHT = "measureWeight";
  @SerializedName(SERIALIZED_NAME_MEASURE_WEIGHT)
  private List<MeasureWeight> measureWeight = null;

  public static final String SERIALIZED_NAME_USER_GEAR = "userGear";
  @SerializedName(SERIALIZED_NAME_USER_GEAR)
  private List<UserGear> userGear = null;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private List<Language> language = null;

  public static final String SERIALIZED_NAME_MEASURE_HEIGHT = "measureHeight";
  @SerializedName(SERIALIZED_NAME_MEASURE_HEIGHT)
  private List<MeasureHeight> measureHeight = null;

  public static final String SERIALIZED_NAME_GROUP_ADMIN_DETAILS = "groupAdminDetails";
  @SerializedName(SERIALIZED_NAME_GROUP_ADMIN_DETAILS)
  private List<GroupAdminDetails> groupAdminDetails = null;

  public static final String SERIALIZED_NAME_AUDIO_FEEDBACK = "audioFeedback";
  @SerializedName(SERIALIZED_NAME_AUDIO_FEEDBACK)
  private List<AudioFeedback> audioFeedback = null;

  public static final String SERIALIZED_NAME_SONGS = "songs";
  @SerializedName(SERIALIZED_NAME_SONGS)
  private List<SongsDetails> songs = null;

  public static final String SERIALIZED_NAME_VIDEO_DETAILS = "videoDetails";
  @SerializedName(SERIALIZED_NAME_VIDEO_DETAILS)
  private List<VideoDetails> videoDetails = null;

  public static final String SERIALIZED_NAME_GROUP_ADMIN_USER_DETAILS = "groupAdminUserDetails";
  @SerializedName(SERIALIZED_NAME_GROUP_ADMIN_USER_DETAILS)
  private List<GroupAdminUserDetails> groupAdminUserDetails = null;

  public static final String SERIALIZED_NAME_QUERY_MASTER = "queryMaster";
  @SerializedName(SERIALIZED_NAME_QUERY_MASTER)
  private List<QueryMaster> queryMaster = null;

  public static final String SERIALIZED_NAME_ROLE_ACCESS = "roleAccess";
  @SerializedName(SERIALIZED_NAME_ROLE_ACCESS)
  private List<RoleAccess> roleAccess = null;

  public static final String SERIALIZED_NAME_ACCESS_TYPE = "accessType";
  @SerializedName(SERIALIZED_NAME_ACCESS_TYPE)
  private List<AccessType> accessType = null;

  public static final String SERIALIZED_NAME_QUERY_COMMENT = "queryComment";
  @SerializedName(SERIALIZED_NAME_QUERY_COMMENT)
  private List<QueryComment> queryComment = null;

  public static final String SERIALIZED_NAME_USER_QUERY_DETAILS = "userQueryDetails";
  @SerializedName(SERIALIZED_NAME_USER_QUERY_DETAILS)
  private List<UserQueryDetails> userQueryDetails = null;


  public RPMContext database(DatabaseFacade database) {
    
    this.database = database;
    return this;
  }

   /**
   * Get database
   * @return database
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DatabaseFacade getDatabase() {
    return database;
  }


  public void setDatabase(DatabaseFacade database) {
    this.database = database;
  }


  public RPMContext changeTracker(ChangeTracker changeTracker) {
    
    this.changeTracker = changeTracker;
    return this;
  }

   /**
   * Get changeTracker
   * @return changeTracker
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ChangeTracker getChangeTracker() {
    return changeTracker;
  }


  public void setChangeTracker(ChangeTracker changeTracker) {
    this.changeTracker = changeTracker;
  }


  public RPMContext model(Object model) {
    
    this.model = model;
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getModel() {
    return model;
  }


  public void setModel(Object model) {
    this.model = model;
  }


  public RPMContext contextId(DbContextId contextId) {
    
    this.contextId = contextId;
    return this;
  }

   /**
   * Get contextId
   * @return contextId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DbContextId getContextId() {
    return contextId;
  }


  public void setContextId(DbContextId contextId) {
    this.contextId = contextId;
  }


  public RPMContext user(List<User> user) {
    
    this.user = user;
    return this;
  }

  public RPMContext addUserItem(User userItem) {
    if (this.user == null) {
      this.user = new ArrayList<User>();
    }
    this.user.add(userItem);
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<User> getUser() {
    return user;
  }


  public void setUser(List<User> user) {
    this.user = user;
  }


  public RPMContext role(List<Role> role) {
    
    this.role = role;
    return this;
  }

  public RPMContext addRoleItem(Role roleItem) {
    if (this.role == null) {
      this.role = new ArrayList<Role>();
    }
    this.role.add(roleItem);
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Role> getRole() {
    return role;
  }


  public void setRole(List<Role> role) {
    this.role = role;
  }


  public RPMContext userRole(List<UserRole> userRole) {
    
    this.userRole = userRole;
    return this;
  }

  public RPMContext addUserRoleItem(UserRole userRoleItem) {
    if (this.userRole == null) {
      this.userRole = new ArrayList<UserRole>();
    }
    this.userRole.add(userRoleItem);
    return this;
  }

   /**
   * Get userRole
   * @return userRole
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<UserRole> getUserRole() {
    return userRole;
  }


  public void setUserRole(List<UserRole> userRole) {
    this.userRole = userRole;
  }


  public RPMContext country(List<Country> country) {
    
    this.country = country;
    return this;
  }

  public RPMContext addCountryItem(Country countryItem) {
    if (this.country == null) {
      this.country = new ArrayList<Country>();
    }
    this.country.add(countryItem);
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Country> getCountry() {
    return country;
  }


  public void setCountry(List<Country> country) {
    this.country = country;
  }


  public RPMContext city(List<City> city) {
    
    this.city = city;
    return this;
  }

  public RPMContext addCityItem(City cityItem) {
    if (this.city == null) {
      this.city = new ArrayList<City>();
    }
    this.city.add(cityItem);
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<City> getCity() {
    return city;
  }


  public void setCity(List<City> city) {
    this.city = city;
  }


  public RPMContext provinceState(List<ProvinceState> provinceState) {
    
    this.provinceState = provinceState;
    return this;
  }

  public RPMContext addProvinceStateItem(ProvinceState provinceStateItem) {
    if (this.provinceState == null) {
      this.provinceState = new ArrayList<ProvinceState>();
    }
    this.provinceState.add(provinceStateItem);
    return this;
  }

   /**
   * Get provinceState
   * @return provinceState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ProvinceState> getProvinceState() {
    return provinceState;
  }


  public void setProvinceState(List<ProvinceState> provinceState) {
    this.provinceState = provinceState;
  }


  public RPMContext passwordResetToken(List<PasswordResetToken> passwordResetToken) {
    
    this.passwordResetToken = passwordResetToken;
    return this;
  }

  public RPMContext addPasswordResetTokenItem(PasswordResetToken passwordResetTokenItem) {
    if (this.passwordResetToken == null) {
      this.passwordResetToken = new ArrayList<PasswordResetToken>();
    }
    this.passwordResetToken.add(passwordResetTokenItem);
    return this;
  }

   /**
   * Get passwordResetToken
   * @return passwordResetToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<PasswordResetToken> getPasswordResetToken() {
    return passwordResetToken;
  }


  public void setPasswordResetToken(List<PasswordResetToken> passwordResetToken) {
    this.passwordResetToken = passwordResetToken;
  }


  public RPMContext themes(List<Themes> themes) {
    
    this.themes = themes;
    return this;
  }

  public RPMContext addThemesItem(Themes themesItem) {
    if (this.themes == null) {
      this.themes = new ArrayList<Themes>();
    }
    this.themes.add(themesItem);
    return this;
  }

   /**
   * Get themes
   * @return themes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Themes> getThemes() {
    return themes;
  }


  public void setThemes(List<Themes> themes) {
    this.themes = themes;
  }


  public RPMContext refreshToken(List<RefreshToken> refreshToken) {
    
    this.refreshToken = refreshToken;
    return this;
  }

  public RPMContext addRefreshTokenItem(RefreshToken refreshTokenItem) {
    if (this.refreshToken == null) {
      this.refreshToken = new ArrayList<RefreshToken>();
    }
    this.refreshToken.add(refreshTokenItem);
    return this;
  }

   /**
   * Get refreshToken
   * @return refreshToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<RefreshToken> getRefreshToken() {
    return refreshToken;
  }


  public void setRefreshToken(List<RefreshToken> refreshToken) {
    this.refreshToken = refreshToken;
  }


  public RPMContext gear(List<Gear> gear) {
    
    this.gear = gear;
    return this;
  }

  public RPMContext addGearItem(Gear gearItem) {
    if (this.gear == null) {
      this.gear = new ArrayList<Gear>();
    }
    this.gear.add(gearItem);
    return this;
  }

   /**
   * Get gear
   * @return gear
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Gear> getGear() {
    return gear;
  }


  public void setGear(List<Gear> gear) {
    this.gear = gear;
  }


  public RPMContext gearBrand(List<GearBrand> gearBrand) {
    
    this.gearBrand = gearBrand;
    return this;
  }

  public RPMContext addGearBrandItem(GearBrand gearBrandItem) {
    if (this.gearBrand == null) {
      this.gearBrand = new ArrayList<GearBrand>();
    }
    this.gearBrand.add(gearBrandItem);
    return this;
  }

   /**
   * Get gearBrand
   * @return gearBrand
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<GearBrand> getGearBrand() {
    return gearBrand;
  }


  public void setGearBrand(List<GearBrand> gearBrand) {
    this.gearBrand = gearBrand;
  }


  public RPMContext measureDistance(List<MeasureDistance> measureDistance) {
    
    this.measureDistance = measureDistance;
    return this;
  }

  public RPMContext addMeasureDistanceItem(MeasureDistance measureDistanceItem) {
    if (this.measureDistance == null) {
      this.measureDistance = new ArrayList<MeasureDistance>();
    }
    this.measureDistance.add(measureDistanceItem);
    return this;
  }

   /**
   * Get measureDistance
   * @return measureDistance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<MeasureDistance> getMeasureDistance() {
    return measureDistance;
  }


  public void setMeasureDistance(List<MeasureDistance> measureDistance) {
    this.measureDistance = measureDistance;
  }


  public RPMContext measureWeight(List<MeasureWeight> measureWeight) {
    
    this.measureWeight = measureWeight;
    return this;
  }

  public RPMContext addMeasureWeightItem(MeasureWeight measureWeightItem) {
    if (this.measureWeight == null) {
      this.measureWeight = new ArrayList<MeasureWeight>();
    }
    this.measureWeight.add(measureWeightItem);
    return this;
  }

   /**
   * Get measureWeight
   * @return measureWeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<MeasureWeight> getMeasureWeight() {
    return measureWeight;
  }


  public void setMeasureWeight(List<MeasureWeight> measureWeight) {
    this.measureWeight = measureWeight;
  }


  public RPMContext userGear(List<UserGear> userGear) {
    
    this.userGear = userGear;
    return this;
  }

  public RPMContext addUserGearItem(UserGear userGearItem) {
    if (this.userGear == null) {
      this.userGear = new ArrayList<UserGear>();
    }
    this.userGear.add(userGearItem);
    return this;
  }

   /**
   * Get userGear
   * @return userGear
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<UserGear> getUserGear() {
    return userGear;
  }


  public void setUserGear(List<UserGear> userGear) {
    this.userGear = userGear;
  }


  public RPMContext language(List<Language> language) {
    
    this.language = language;
    return this;
  }

  public RPMContext addLanguageItem(Language languageItem) {
    if (this.language == null) {
      this.language = new ArrayList<Language>();
    }
    this.language.add(languageItem);
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Language> getLanguage() {
    return language;
  }


  public void setLanguage(List<Language> language) {
    this.language = language;
  }


  public RPMContext measureHeight(List<MeasureHeight> measureHeight) {
    
    this.measureHeight = measureHeight;
    return this;
  }

  public RPMContext addMeasureHeightItem(MeasureHeight measureHeightItem) {
    if (this.measureHeight == null) {
      this.measureHeight = new ArrayList<MeasureHeight>();
    }
    this.measureHeight.add(measureHeightItem);
    return this;
  }

   /**
   * Get measureHeight
   * @return measureHeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<MeasureHeight> getMeasureHeight() {
    return measureHeight;
  }


  public void setMeasureHeight(List<MeasureHeight> measureHeight) {
    this.measureHeight = measureHeight;
  }


  public RPMContext groupAdminDetails(List<GroupAdminDetails> groupAdminDetails) {
    
    this.groupAdminDetails = groupAdminDetails;
    return this;
  }

  public RPMContext addGroupAdminDetailsItem(GroupAdminDetails groupAdminDetailsItem) {
    if (this.groupAdminDetails == null) {
      this.groupAdminDetails = new ArrayList<GroupAdminDetails>();
    }
    this.groupAdminDetails.add(groupAdminDetailsItem);
    return this;
  }

   /**
   * Get groupAdminDetails
   * @return groupAdminDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<GroupAdminDetails> getGroupAdminDetails() {
    return groupAdminDetails;
  }


  public void setGroupAdminDetails(List<GroupAdminDetails> groupAdminDetails) {
    this.groupAdminDetails = groupAdminDetails;
  }


  public RPMContext audioFeedback(List<AudioFeedback> audioFeedback) {
    
    this.audioFeedback = audioFeedback;
    return this;
  }

  public RPMContext addAudioFeedbackItem(AudioFeedback audioFeedbackItem) {
    if (this.audioFeedback == null) {
      this.audioFeedback = new ArrayList<AudioFeedback>();
    }
    this.audioFeedback.add(audioFeedbackItem);
    return this;
  }

   /**
   * Get audioFeedback
   * @return audioFeedback
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AudioFeedback> getAudioFeedback() {
    return audioFeedback;
  }


  public void setAudioFeedback(List<AudioFeedback> audioFeedback) {
    this.audioFeedback = audioFeedback;
  }


  public RPMContext songs(List<SongsDetails> songs) {
    
    this.songs = songs;
    return this;
  }

  public RPMContext addSongsItem(SongsDetails songsItem) {
    if (this.songs == null) {
      this.songs = new ArrayList<SongsDetails>();
    }
    this.songs.add(songsItem);
    return this;
  }

   /**
   * Get songs
   * @return songs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<SongsDetails> getSongs() {
    return songs;
  }


  public void setSongs(List<SongsDetails> songs) {
    this.songs = songs;
  }


  public RPMContext videoDetails(List<VideoDetails> videoDetails) {
    
    this.videoDetails = videoDetails;
    return this;
  }

  public RPMContext addVideoDetailsItem(VideoDetails videoDetailsItem) {
    if (this.videoDetails == null) {
      this.videoDetails = new ArrayList<VideoDetails>();
    }
    this.videoDetails.add(videoDetailsItem);
    return this;
  }

   /**
   * Get videoDetails
   * @return videoDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<VideoDetails> getVideoDetails() {
    return videoDetails;
  }


  public void setVideoDetails(List<VideoDetails> videoDetails) {
    this.videoDetails = videoDetails;
  }


  public RPMContext groupAdminUserDetails(List<GroupAdminUserDetails> groupAdminUserDetails) {
    
    this.groupAdminUserDetails = groupAdminUserDetails;
    return this;
  }

  public RPMContext addGroupAdminUserDetailsItem(GroupAdminUserDetails groupAdminUserDetailsItem) {
    if (this.groupAdminUserDetails == null) {
      this.groupAdminUserDetails = new ArrayList<GroupAdminUserDetails>();
    }
    this.groupAdminUserDetails.add(groupAdminUserDetailsItem);
    return this;
  }

   /**
   * Get groupAdminUserDetails
   * @return groupAdminUserDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<GroupAdminUserDetails> getGroupAdminUserDetails() {
    return groupAdminUserDetails;
  }


  public void setGroupAdminUserDetails(List<GroupAdminUserDetails> groupAdminUserDetails) {
    this.groupAdminUserDetails = groupAdminUserDetails;
  }


  public RPMContext queryMaster(List<QueryMaster> queryMaster) {
    
    this.queryMaster = queryMaster;
    return this;
  }

  public RPMContext addQueryMasterItem(QueryMaster queryMasterItem) {
    if (this.queryMaster == null) {
      this.queryMaster = new ArrayList<QueryMaster>();
    }
    this.queryMaster.add(queryMasterItem);
    return this;
  }

   /**
   * Get queryMaster
   * @return queryMaster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<QueryMaster> getQueryMaster() {
    return queryMaster;
  }


  public void setQueryMaster(List<QueryMaster> queryMaster) {
    this.queryMaster = queryMaster;
  }


  public RPMContext roleAccess(List<RoleAccess> roleAccess) {
    
    this.roleAccess = roleAccess;
    return this;
  }

  public RPMContext addRoleAccessItem(RoleAccess roleAccessItem) {
    if (this.roleAccess == null) {
      this.roleAccess = new ArrayList<RoleAccess>();
    }
    this.roleAccess.add(roleAccessItem);
    return this;
  }

   /**
   * Get roleAccess
   * @return roleAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<RoleAccess> getRoleAccess() {
    return roleAccess;
  }


  public void setRoleAccess(List<RoleAccess> roleAccess) {
    this.roleAccess = roleAccess;
  }


  public RPMContext accessType(List<AccessType> accessType) {
    
    this.accessType = accessType;
    return this;
  }

  public RPMContext addAccessTypeItem(AccessType accessTypeItem) {
    if (this.accessType == null) {
      this.accessType = new ArrayList<AccessType>();
    }
    this.accessType.add(accessTypeItem);
    return this;
  }

   /**
   * Get accessType
   * @return accessType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AccessType> getAccessType() {
    return accessType;
  }


  public void setAccessType(List<AccessType> accessType) {
    this.accessType = accessType;
  }


  public RPMContext queryComment(List<QueryComment> queryComment) {
    
    this.queryComment = queryComment;
    return this;
  }

  public RPMContext addQueryCommentItem(QueryComment queryCommentItem) {
    if (this.queryComment == null) {
      this.queryComment = new ArrayList<QueryComment>();
    }
    this.queryComment.add(queryCommentItem);
    return this;
  }

   /**
   * Get queryComment
   * @return queryComment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<QueryComment> getQueryComment() {
    return queryComment;
  }


  public void setQueryComment(List<QueryComment> queryComment) {
    this.queryComment = queryComment;
  }


  public RPMContext userQueryDetails(List<UserQueryDetails> userQueryDetails) {
    
    this.userQueryDetails = userQueryDetails;
    return this;
  }

  public RPMContext addUserQueryDetailsItem(UserQueryDetails userQueryDetailsItem) {
    if (this.userQueryDetails == null) {
      this.userQueryDetails = new ArrayList<UserQueryDetails>();
    }
    this.userQueryDetails.add(userQueryDetailsItem);
    return this;
  }

   /**
   * Get userQueryDetails
   * @return userQueryDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<UserQueryDetails> getUserQueryDetails() {
    return userQueryDetails;
  }


  public void setUserQueryDetails(List<UserQueryDetails> userQueryDetails) {
    this.userQueryDetails = userQueryDetails;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RPMContext rpMContext = (RPMContext) o;
    return Objects.equals(this.database, rpMContext.database) &&
        Objects.equals(this.changeTracker, rpMContext.changeTracker) &&
        Objects.equals(this.model, rpMContext.model) &&
        Objects.equals(this.contextId, rpMContext.contextId) &&
        Objects.equals(this.user, rpMContext.user) &&
        Objects.equals(this.role, rpMContext.role) &&
        Objects.equals(this.userRole, rpMContext.userRole) &&
        Objects.equals(this.country, rpMContext.country) &&
        Objects.equals(this.city, rpMContext.city) &&
        Objects.equals(this.provinceState, rpMContext.provinceState) &&
        Objects.equals(this.passwordResetToken, rpMContext.passwordResetToken) &&
        Objects.equals(this.themes, rpMContext.themes) &&
        Objects.equals(this.refreshToken, rpMContext.refreshToken) &&
        Objects.equals(this.gear, rpMContext.gear) &&
        Objects.equals(this.gearBrand, rpMContext.gearBrand) &&
        Objects.equals(this.measureDistance, rpMContext.measureDistance) &&
        Objects.equals(this.measureWeight, rpMContext.measureWeight) &&
        Objects.equals(this.userGear, rpMContext.userGear) &&
        Objects.equals(this.language, rpMContext.language) &&
        Objects.equals(this.measureHeight, rpMContext.measureHeight) &&
        Objects.equals(this.groupAdminDetails, rpMContext.groupAdminDetails) &&
        Objects.equals(this.audioFeedback, rpMContext.audioFeedback) &&
        Objects.equals(this.songs, rpMContext.songs) &&
        Objects.equals(this.videoDetails, rpMContext.videoDetails) &&
        Objects.equals(this.groupAdminUserDetails, rpMContext.groupAdminUserDetails) &&
        Objects.equals(this.queryMaster, rpMContext.queryMaster) &&
        Objects.equals(this.roleAccess, rpMContext.roleAccess) &&
        Objects.equals(this.accessType, rpMContext.accessType) &&
        Objects.equals(this.queryComment, rpMContext.queryComment) &&
        Objects.equals(this.userQueryDetails, rpMContext.userQueryDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(database, changeTracker, model, contextId, user, role, userRole, country, city, provinceState, passwordResetToken, themes, refreshToken, gear, gearBrand, measureDistance, measureWeight, userGear, language, measureHeight, groupAdminDetails, audioFeedback, songs, videoDetails, groupAdminUserDetails, queryMaster, roleAccess, accessType, queryComment, userQueryDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RPMContext {\n");
    sb.append("    database: ").append(toIndentedString(database)).append("\n");
    sb.append("    changeTracker: ").append(toIndentedString(changeTracker)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    userRole: ").append(toIndentedString(userRole)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    provinceState: ").append(toIndentedString(provinceState)).append("\n");
    sb.append("    passwordResetToken: ").append(toIndentedString(passwordResetToken)).append("\n");
    sb.append("    themes: ").append(toIndentedString(themes)).append("\n");
    sb.append("    refreshToken: ").append(toIndentedString(refreshToken)).append("\n");
    sb.append("    gear: ").append(toIndentedString(gear)).append("\n");
    sb.append("    gearBrand: ").append(toIndentedString(gearBrand)).append("\n");
    sb.append("    measureDistance: ").append(toIndentedString(measureDistance)).append("\n");
    sb.append("    measureWeight: ").append(toIndentedString(measureWeight)).append("\n");
    sb.append("    userGear: ").append(toIndentedString(userGear)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    measureHeight: ").append(toIndentedString(measureHeight)).append("\n");
    sb.append("    groupAdminDetails: ").append(toIndentedString(groupAdminDetails)).append("\n");
    sb.append("    audioFeedback: ").append(toIndentedString(audioFeedback)).append("\n");
    sb.append("    songs: ").append(toIndentedString(songs)).append("\n");
    sb.append("    videoDetails: ").append(toIndentedString(videoDetails)).append("\n");
    sb.append("    groupAdminUserDetails: ").append(toIndentedString(groupAdminUserDetails)).append("\n");
    sb.append("    queryMaster: ").append(toIndentedString(queryMaster)).append("\n");
    sb.append("    roleAccess: ").append(toIndentedString(roleAccess)).append("\n");
    sb.append("    accessType: ").append(toIndentedString(accessType)).append("\n");
    sb.append("    queryComment: ").append(toIndentedString(queryComment)).append("\n");
    sb.append("    userQueryDetails: ").append(toIndentedString(userQueryDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

