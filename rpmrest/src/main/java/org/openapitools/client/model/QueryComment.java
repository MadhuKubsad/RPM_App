/*
 * RPM Mobile
 * RPM Mobile
 *
 * The version of the OpenAPI document: Phase 1
 * Contact: karthikchiru@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.Date;
import org.openapitools.client.model.UserQueryDetails;
import java.io.Serializable;

/**
 * QueryComment
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T19:18:22.480284200+05:30[Asia/Calcutta]")
public class QueryComment implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_QUERY_COMMENTS_I_D = "queryCommentsID";
  @SerializedName(SERIALIZED_NAME_QUERY_COMMENTS_I_D)
  private Long queryCommentsID;

  public static final String SERIALIZED_NAME_USER_QUERY_DETAILS_ID = "userQueryDetailsId";
  @SerializedName(SERIALIZED_NAME_USER_QUERY_DETAILS_ID)
  private Long userQueryDetailsId;

  public static final String SERIALIZED_NAME_USER_QUERY_DETAILS = "userQueryDetails";
  @SerializedName(SERIALIZED_NAME_USER_QUERY_DETAILS)
  private UserQueryDetails userQueryDetails;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_DATE_TIME = "dateTime";
  @SerializedName(SERIALIZED_NAME_DATE_TIME)
  private Date dateTime;

  public static final String SERIALIZED_NAME_UPDATED_DATE_TIME = "updatedDateTime";
  @SerializedName(SERIALIZED_NAME_UPDATED_DATE_TIME)
  private Date updatedDateTime;

  public static final String SERIALIZED_NAME_UPDATED_BY_USER_NAME = "updatedByUserName";
  @SerializedName(SERIALIZED_NAME_UPDATED_BY_USER_NAME)
  private String updatedByUserName;


  public QueryComment queryCommentsID(Long queryCommentsID) {
    
    this.queryCommentsID = queryCommentsID;
    return this;
  }

   /**
   * Get queryCommentsID
   * @return queryCommentsID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getQueryCommentsID() {
    return queryCommentsID;
  }


  public void setQueryCommentsID(Long queryCommentsID) {
    this.queryCommentsID = queryCommentsID;
  }


  public QueryComment userQueryDetailsId(Long userQueryDetailsId) {
    
    this.userQueryDetailsId = userQueryDetailsId;
    return this;
  }

   /**
   * Get userQueryDetailsId
   * @return userQueryDetailsId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getUserQueryDetailsId() {
    return userQueryDetailsId;
  }


  public void setUserQueryDetailsId(Long userQueryDetailsId) {
    this.userQueryDetailsId = userQueryDetailsId;
  }


  public QueryComment userQueryDetails(UserQueryDetails userQueryDetails) {
    
    this.userQueryDetails = userQueryDetails;
    return this;
  }

   /**
   * Get userQueryDetails
   * @return userQueryDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserQueryDetails getUserQueryDetails() {
    return userQueryDetails;
  }


  public void setUserQueryDetails(UserQueryDetails userQueryDetails) {
    this.userQueryDetails = userQueryDetails;
  }


  public QueryComment comment(String comment) {
    
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getComment() {
    return comment;
  }


  public void setComment(String comment) {
    this.comment = comment;
  }


  public QueryComment dateTime(Date dateTime) {
    
    this.dateTime = dateTime;
    return this;
  }

   /**
   * Get dateTime
   * @return dateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Date getDateTime() {
    return dateTime;
  }


  public void setDateTime(Date dateTime) {
    this.dateTime = dateTime;
  }


  public QueryComment updatedDateTime(Date updatedDateTime) {
    
    this.updatedDateTime = updatedDateTime;
    return this;
  }

   /**
   * Get updatedDateTime
   * @return updatedDateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Date getUpdatedDateTime() {
    return updatedDateTime;
  }


  public void setUpdatedDateTime(Date updatedDateTime) {
    this.updatedDateTime = updatedDateTime;
  }


  public QueryComment updatedByUserName(String updatedByUserName) {
    
    this.updatedByUserName = updatedByUserName;
    return this;
  }

   /**
   * Get updatedByUserName
   * @return updatedByUserName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUpdatedByUserName() {
    return updatedByUserName;
  }


  public void setUpdatedByUserName(String updatedByUserName) {
    this.updatedByUserName = updatedByUserName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryComment queryComment = (QueryComment) o;
    return Objects.equals(this.queryCommentsID, queryComment.queryCommentsID) &&
        Objects.equals(this.userQueryDetailsId, queryComment.userQueryDetailsId) &&
        Objects.equals(this.userQueryDetails, queryComment.userQueryDetails) &&
        Objects.equals(this.comment, queryComment.comment) &&
        Objects.equals(this.dateTime, queryComment.dateTime) &&
        Objects.equals(this.updatedDateTime, queryComment.updatedDateTime) &&
        Objects.equals(this.updatedByUserName, queryComment.updatedByUserName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(queryCommentsID, userQueryDetailsId, userQueryDetails, comment, dateTime, updatedDateTime, updatedByUserName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryComment {\n");
    sb.append("    queryCommentsID: ").append(toIndentedString(queryCommentsID)).append("\n");
    sb.append("    userQueryDetailsId: ").append(toIndentedString(userQueryDetailsId)).append("\n");
    sb.append("    userQueryDetails: ").append(toIndentedString(userQueryDetails)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    dateTime: ").append(toIndentedString(dateTime)).append("\n");
    sb.append("    updatedDateTime: ").append(toIndentedString(updatedDateTime)).append("\n");
    sb.append("    updatedByUserName: ").append(toIndentedString(updatedByUserName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

